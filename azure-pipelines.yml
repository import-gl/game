# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: CopyFiles@2
  displayName: 'Copy WAR file'
  inputs:
    SourceFolder: '$(build.sourcesdirectory)'
    Contents: 'target/**/*.war'
    TargetFolder: '$(build.artifactstagingdirectory)'
    flattenFolders: true

- script: echo $(build.artifactstagingdirectory)

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'testapp'
    publishLocation: 'Container'

- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'testapp'
    downloadPath: '$(System.ArtifactsDirectory)'


#- task: Docker@2
#  inputs:
#    containerRegistry: 'docker_connection'
#    repository: 'akshay77/testing_repo'
#    command: 'build'
#    Dockerfile: 'Dockerfile'
#    arguments: '--build-arg WAR=$(System.ArtifactsDirectory)'

- script: echo $(System.ArtifactsDirectory)

#- task: Docker@2
#  inputs:
#    containerRegistry: 'docker_connection'
#    repository: 'akshay77/testing_repo'
#    command: 'push'
